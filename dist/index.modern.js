const t=(t,r)=>Math.random()*(r-t)+t,r=function(t,r,n){return Math.min(r,Math.max(t,n))},n=function(t,r,n){return t+n*(r-t)},o=(t,r)=>{const n=[27.609,57.583];return t.array&&(t=t.array),e(Math.sin(n[0]*t[0]+n[1]*t[1])*r)},a=(t,r)=>{const n=Math.pow(10,r);return Math.round(t*n)/n},e=(t,r=6)=>{const n=Math.pow(10,r),o=Math.abs(Math.floor(t*n)/n);return o<1?o:Math.floor(o%Math.floor(o)*n)/n},u=t=>{for(var r=0,n=1779033703^t.length;r<t.length;r++)n=(n=Math.imul(n^t.charCodeAt(r),3432918353))<<13|n>>>19;return function(){return n=Math.imul(n^n>>>16,2246822507),n=Math.imul(n^n>>>13,3266489909),(n^=n>>>16)>>>0}},h=function(t,r){return new Promise((n,o)=>{t.onload=()=>n(t),t.onerror=o,t.src=r})},M=function(t){const r=[];for(let n in t){const o=new Image;r.push(h(o,t[n]))}return Promise.all(r)};export{h as asyncImageLoad,r as clamp,t as floatRandomBetween,e as fract,o as hash21,n as lerp,M as loadAllImages,a as precisionRound,u as xmur3};
//# sourceMappingURL=index.modern.js.map
